@import 'styles/mixins';

@mixin order {
  @include piece;
  height: 5em;
  width: 5em;
}

.march-order {
  @include order;
  background-image: url("images/tokens/order/march.png");
}
.special-march-order {
  @include order;
  background-image: url("images/tokens/order/marchp.png");
}
.minus-march-order {
  @include order;
  background-image: url("images/tokens/order/marchm.png");
}

.support-order {
  @include order;
  background-image: url("images/tokens/order/support.png");
}
.special-support-order {
  @include order;
  background-image: url("images/tokens/order/supportp.png");
}

.raid-order {
  @include order;
  background-image: url("images/tokens/order/raid.png");
}
.special-raid-order {
  @include order;
  background-image: url("images/tokens/order/raidp.png");
}

.consolidation-order {
  @include order;
  background-image: url("images/tokens/order/consolidate.png");
}
.special-consolidation-order {
  @include order;
  background-image: url("images/tokens/order/consolidatep.png");
}

.defense-order {
  @include order;
  background-image: url("images/tokens/order/defend.png");
}
.special-defense-order {
  @include order;
  background-image: url("images/tokens/order/defendp.png");
}

@each $house in $houses {
  .#{$house}-order-cover {
    @include piece;
    height: 5em;
    width: 5em;
    background-image: url("images/tokens/order/covers/#{$house}.png");
    background-size: contain;
  }
}

/* entire container, keeps perspective */
.flippable {
  perspective: 1000;
  display: inline-block;

  /* flip the pane when add the class */
  &.flipped .flipper, [flipped] .flipper {
    transform: rotateY(0deg);
  }

  /* flip speed goes here */
  .flipper {
    transition: 0.6s;
    transform-style: preserve-3d;
  }

  /* hide back of pane during swap */
  :first-child,
  :last-child {
    backface-visibility: hidden;
    position: absolute;
  }

  /* front pane, placed above back */
  :first-child {
    z-index: 2;
    /* for firefox 31 */
    transform: rotateY(0deg);
  }

  /* back, initially hidden pane */
  :last-child {
    transform: rotateY(180deg);
    position: relative;
  }
}
